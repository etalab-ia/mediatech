name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install -e .
    
    - name: Validate installation
      run: |
        mediatech --help  # Check if the command is available
        python -c "import config; import database; import download_and_processing; print('All imports are OK')"

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: validate
    runs-on: ubuntu-latest
    steps:
    - name: Check lockfile on VM (legacy)
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e
          PROJECT_DIR="${{ secrets.VM_PROJECT_DIR }}"

          if [ ! -d "$PROJECT_DIR" ]; then
            echo "ERROR: Project directory not found: Please check the VM_PROJECT_DIR secret."
            exit 1
          fi
          
          cd "$PROJECT_DIR"

          if [ -f tmp/update.lock ]; then
            echo "Deployment is locked. Please wait for the current collections update to finish."
            exit 1
          else
            echo "No collections update in progress, deploying..."
          fi
    
    - name: Check if DAGs are running
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e
          PROJECT_DIR="${{ secrets.VM_PROJECT_DIR }}"

          if [ ! -d "$PROJECT_DIR" ]; then
            echo "ERROR: Project directory not found: Please check the VM_PROJECT_DIR secret."
            exit 1
          fi
          
          cd "$PROJECT_DIR"

          if [ -f scripts/check_running_dags.sh ]; then
            sudo chmod +x scripts/check_running_dags.sh
            ./scripts/check_running_dags.sh
          else
            echo "Running dags check script not found."
            exit 1
          fi


    - name: Code sync
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e 

          PROJECT_DIR="${{ secrets.VM_PROJECT_DIR }}"
        
          if [ ! -d "$PROJECT_DIR" ]; then
            echo "ERROR: Project directory not found: Please check the VM_PROJECT_DIR secret."
            exit 1
          fi
          
          cd "$PROJECT_DIR"
          
          git pull origin main
          
          if [ ! -f .env ]; then
            echo "There is no .env file. Please create it from .env.example."
            exit 1
          fi
          
    - name: System setup (initial deployment)
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e 

          PROJECT_DIR="${{ secrets.VM_PROJECT_DIR }}"
        
          if [ ! -d "$PROJECT_DIR" ]; then
            echo "ERROR: Project directory not found: Please check the VM_PROJECT_DIR secret."
            exit 1
          fi
          
          cd "$PROJECT_DIR"

          if ! command -v docker &> /dev/null; then
            echo "Docker is not installed. Installing Docker..."
            if [ -f scripts/initial_deployment.sh ]; then
              sudo chmod +x scripts/initial_deployment.sh
              ./scripts/initial_deployment.sh
            else
              echo "Initial deployment script not found."
              exit 1
            fi
          else
            echo "Docker detected. Skipping Docker installation."
          fi
    
    - name: Containers deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          set -e 

          PROJECT_DIR="${{ secrets.VM_PROJECT_DIR }}"
        
          if [ ! -d "$PROJECT_DIR" ]; then
            echo "ERROR: Project directory not found: Please check the VM_PROJECT_DIR secret."
            exit 1
          fi
          
          cd "$PROJECT_DIR"
          
          if [ -f scripts/containers_deployment.sh ]; then
            sudo chmod +x scripts/containers_deployment.sh
            ./scripts/containers_deployment.sh
          else
            echo "ERROR: scripts/containers_deployment.sh not found"
            exit 1
          fi